
软件包的安装与管理
本节所讲内容：
rpm软件包管理
yum安装软件包
源码编译安装软件包

第1章 软件包的管理
软件的类型
1、源码包   -----》需要编译
2、二进制包   -----》已经使用GCC编译
常见的二进制包：--RPM包
系统平台：REDHAT/CENTOS/FEDORA/SUSE  rpm    管理工具：rpm  yum(自动解决依赖关系) zypper
RPM包的两种管理方式：RPM和YUM这两种。
两种包管理各有用处，其中主要区别是：
YUM使用简单，可以本地使用也可联网，网络YUM源，就是YUM会去网上的YUM包源去获取所需要的软件包。而RPM的需要的操作精度比较细，需要我们做的事情比较多。
1.1 rpm软件包管理：
简称: Redhat Package Manager
获取RPM包的途径：
光盘
rpmfind.net
比如安装mysql  nginx软件时，我们可以去它的官方网站：http://www.mysql.com
[root@xuegod72 ~]# umount /dev/sr0   卸载
卸载前，你要退出当前目录
[root@xuegod72 ~]# mount /dev/sr0 /mnt/   挂载
1.1.2 rpm包说明：
zsh-5.0.2-14.el7.x86_64.rpm
zsh
-5
.0
.2
14
-e17
x86
64
软件名
主版本号
次版本号
修订号
发布次数
RHEL7
CPU架构平台
支持系统位数
注：EL6 EL5
1.1.3 安装rpm软件
命令：rpm [参数] 软件包
参数：
-i, --install              安装软件包
--nodeps               不验证软件包依赖，也就是说不检测依赖性
-v, --verbose            提供更多的详细信息输出
-V 校验               对已安装的软件包进行校验
-h, --hash              软件包安装的时候列出哈希标记，显示进度
再安装以前，要给大家说一下什么情况下使用软件包全名，什么时候使用软件包名？
全名：在安装和更新升级时候使用
包名：对已经安装过的软件包进行操作时，比如查找已经安装的某个包，卸载包等 ，使用包名。它默认是去目录/var/lib/rpm下面进行搜索
从本地光盘安装
[root@panda Packages]# rpm -ivh zsh-5.0.2-14.el7.x86_64.rpm
从网上直接安装
[root@panda mnt]# rpm -ivh ftp://rpmfind.net/linux/epel/7/x86_64/n/ntfs-3g-2016.2.22-3.el7.x86_64.rpm
针对有依赖关系的包安装
[root@panda mnt]# rpm -ivh /media/Packages/httpd-2.4.6-40.el7.x86_64.rpm
warning: /media/Packages/httpd-2.4.6-40.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY
error: Failed dependencies:
       /etc/mime.types is needed by httpd-2.4.6-40.el7.x86_64
       httpd-tools = 2.4.6-40.el7 is needed by httpd-2.4.6-40.el7.x86_64
[root@panda mnt]# rpm -ivh /media/Packages/httpd-tools-2.4.6-40.el7.x86_64.rpm
mime.types文件可以通过网站rpmfind.net进行查找

[root@panda mnt]# rpm -ivh /media/Packages/mailcap-2.1.41-2.el7.noarch.rpm
[root@panda mnt]# rpm -ivh /media/Packages/httpd-2.4.6-40.el7.x86_64.rpm
warning: /media/Packages/httpd-2.4.6-40.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID fd431d51: NOKEY
Preparing...                          ################################# [100%]
Updating / installing...
   1:httpd-2.4.6-40.el7               ################################# [100%]
1.1.4 rpm查询功能
用法：rpm –q（query） 常与下面参数组合使用
-a（all）  查询所有已安装的软件包
-f（file）系统文件名（查询系统文件所属哪个软件包），反向查询
-i  显示已经安装的rpm软件包信息
-l（list）  查询软件包中文件安装的位置
-p  查询未安装软件包的相关信息
-R 查询软件包的依赖性
通常可以配合管道 | more 来使用，使得结果更易读
针对已经安装的包从本地的PRM数据库查找
[root@panda mnt]# rpm -q zsh   --->查询指定的包是否安装
[root@panda mnt]# rpm -qa|grep vim    --->查询所有已安装包
[root@panda mnt]# rpm -ql ntfs-3g    --->查询ntfs-3g安装的文件
[root@panda mnt]# rpm -qf /usr/bin    --->查询文件或命令属于哪个安装包
[root@panda mnt]# rpm -qi ntfs-3g    --->查询包的详细信息
[root@panda mnt]# rpm -qc shadow-utils   --->查找某个包安装的配置文件
[root@panda mnt]# rpm -qd shadow-utils   --->查看安装包的帮助文档
针对没有安装的RPM包，我们可以直接从光盘镜像中查询
[root@panda mnt]# rpm -qip /media/Packages/zip-3.0-10.el7.x86_64.rpm
[root@panda mnt]# rpm -qlp /media/Packages/zip-3.0-10.el7.x86_64.rpm
查看套件包的依赖性
[root@panda mnt]# rpm -qpR /media/Packages/httpd-2.4.6-40.el7.x86_64.rpm
============================================================================

1.1.5 rpm包升级
用法：rpm 【参数】 包名
–U  package.rpm      更新一个RPM包但不改变其配置文件
-F   package.rpm      更新一个确定已经安装的rpm包
例如：查看版本（在RHEL6操作演示的）
[root@xuegod63 ~]# rpm -qa|grep httpd
httpd-2.2.15-29.el6_4.x86_64
httpd-tools-2.2.15-29.el6_4.x86_64
下载新的版本
[root@xuegod63 ~]# wget ftp://rpmfind.net/linux/centos/6.8/updates/x86_64/Packages/httpd-2.2.15-54.el6.centos.x86_64.rpm
[root@xuegod63 ~]# wget ftp://rpmfind.net/linux/centos/6.8/updates/x86_64/Packages/httpd-tools-2.2.15-54.el6.centos.x86_64.rpm
安装，因为有依赖，所以安装不成功
[root@xuegod63 mnt]# rpm -Uvh httpd-tools-2.2.15-54.el6.centos.x86_64.rpm
warning: httpd-tools-2.2.15-54.el6.centos.x86_64.rpm: Header V3 RSA/SHA1 Signature, key ID c105b9de: NOKEY
error: Failed dependencies:
       httpd-tools = 2.2.15-29.el6_4 is needed by (installed) httpd-2.2.15-29.el6_4.x86_64
[root@xuegod63 mnt]# rpm -Uvh httpd-2.2.15-54.el6.centos.x86_64.rpm
warning: httpd-2.2.15-54.el6.centos.x86_64.rpm: Header V3 RSA/SHA1 Signature, key ID c105b9de: NOKEY
error: Failed dependencies:
       httpd-tools = 2.2.15-54.el6.centos is needed by httpd-2.2.15-54.el6.centos.x86_64
添加参数让它忽略依赖关系
[root@xuegod63 mnt]# rpm -Uvh httpd-2.2.15-54.el6.centos.x86_64.rpm --nodeps
warning: httpd-2.2.15-54.el6.centos.x86_64.rpm: Header V3 RSA/SHA1 Signature, key ID c105b9de: NOKEY
Preparing...                ########################################### [100%]
   1:httpd                  warning: /etc/httpd/conf/httpd.conf created as /etc/httpd/conf/httpd.conf.rpmnew
########################################### [100%]
[root@xuegod63 mnt]# rpm -Uvh httpd-tools-2.2.15-54.el6.centos.x86_64.rpm --nodeps
warning: httpd-tools-2.2.15-54.el6.centos.x86_64.rpm: Header V3 RSA/SHA1 Signature, key ID c105b9de: NOKEY
Preparing...                ########################################### [100%]
   1:httpd-tools            ########################################### [100%]
[root@xuegod63 mnt]# rpm -qa|grep httpd
httpd-2.2.15-54.el6.centos.x86_64
httpd-tools-2.2.15-54.el6.centos.x86_64
1.1.6 查看软件包是否被修改
[root@panda mnt]# vim /etc/httpd/conf
[root@panda mnt]# rpm -V httpd
S.5....T.  c /etc/httpd/conf/httpd.conf
输出格式是8位长字符串, 8位长字符，每个代表一个文件属性与RPM数据库中记录的属性相比较的结果。"." (点) 表示测试通过。 下面的字符代表某测试的失败:
5 — MD5 校验和是否改变，你也看成文件内容是否改变
S — 文件长度，大小是否改变
L — 符号链接，文件路径是否改变
T — 文件修改日期是否改变
D — 设备
U — 用户，文件的属主
G — 用户组
M — 模式 (包含许可和文件类型)
? — 不可读文件
再后面的c 文件名,它表示的是文件类型
c 配置文件
d 普通文件
g 不该出现的文件，意思就是这个文件不该被这个包所包含
l 授权文件（license file）
r 描述文件
1.1.7 rpm包卸载
用法：rpm –e（erase） 包名
参数： --nodeps 忽略依赖
例如1：
无依赖关系，正常卸载
[root@panda ~]# rpm -e zsh
1.1.8 RPM包提取文件
rpm2cpio 软件包名 | cpio –idv .文件的绝对路径
说明：
cpio命令主要是用来建立或者还原备份档的工具程序，cpio命令可以复制文件到归档包中，或者从归档包中复制文件。
                     -i 还原，提取
                     -d 如果有需要cpio会自行建立目录
                     -v  显示还原过程
rpm2cpio:是一个转换格式命令
[root@xuegod72 mnt]# rpm2cpio /media/Packages/coreutils-8.22-15.el7.x86_64.rpm |cpio -idv ./usr/bin/ls
28579 块
也就是说你查出哪个文件或命令缺失，那个你后面就写这个文件或命令的绝对路径
前面加那个点代表在当前目录中生成一个和你要恢复的文件路径一样的东西
第2章 YUM的使用
       yum（全称为 Yellow dog Updater, Modified）是一个前端软件包管理器。基于RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软体包，无须繁琐地一次次下载、安装。yum提供了查找、安装、删除某一个、一组甚至全部软件包的命令，而且命令简洁而又好记
YUM：解决依赖关系问题，自动下载软件包，它是基于C/S架构
              C=client                     S=ftp\http\file
YUM源分本地源和网络源，我们也说配置它的软件存储库
2.1 配置YUM源

注意：如果有基础的可以在参考文件上修改，没有基础的全部删除自己手工写一个
YUM配置文件的格式必须以.repo结尾
网络YUM源大家可以网上去源分享中心下载一下修改
配置一个本地YUM源
[root@xuegod72 ~]# rm -rf /etc/yum.repos.d/*
[root@xuegod72 yum.repos.d]# vim rhel7.repo
[7-source]                           #yum源名称，唯一的，用来区分不同的yum源
name=rhel7-server                #对yum源描述信息
baseurl=file:///media              #yum源的路径,提供方式包括FTP(ftp://...)、HTTP(http://...)、本地(file:///...                                                                光盘挂载目录所在的位置）
enabled=1                            #为1，表示启用yum源；0为禁用
gpgcheck=0                         #为1，使用公钥检验rpm的正确性；0为不校验
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release 若为校验请指定公钥文件地址
2.2 YUM使用
清空yum缓存
[root@xuegod72 yum.repos.d]# yum clean all
[root@xuegod72 ~]# yum list|more
[root@panda /]# yum repolist
注意的几个小问题：
确定光盘是否链接
光盘是否挂载
配置文件中格式是否正确，字母，符号有没有少写,挂载点和配置文件中设置的是否一致
网络源需要联网，操作和RPM类似，只是会自动安装依赖项。
主要操作：
安装 yum  install -y  httpd
2) 检测升级 yum  check-update
3) 升级 yum  update  kernel
4) 软件包查询 yum list httpd
5) 软件包信息 yum info httpd
6）查看与指定的路径名匹配的软件包
yum provides /var/www/html/
7) 卸载 yum remove 包名
[root@xuegod72 yum.repos.d]# yum -y remove httpd
8) 帮助 yum -help、man  yum
2.3 安装一组软件包
查看包组
[root@xuegod72 ~]# yum grouplist
显示组的相关信息
[root@panda ~]# yum groupinfo 虚拟化主机
安装一组包
[root@xuegod72 ~]# yum  –y  groupinstall "Security Tools"
查看历史记录
[root@panda ~]# cd /var/log/
[root@panda log]# tail yum.log
Feb 08 21:52:18 Installed: finger-0.17-52.el7.x86_64
[root@panda ~]# yum history
已加载插件：langpacks, product-id, search-disabled-repos, subscription-manager
This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.
ID     | 登录用户                 | 日期和时间       | 操作           | 变更数
-------------------------------------------------------------------------------
    12 | root <root>              | 2017-02-08 21:52 | Install        |    1
    11 | root <root>              | 2018-10-10 13:35 | Install        |    2
    10 | root <root>              | 2018-10-10 13:30 | Install        |    2
     9 | root <root>              | 2018-10-10 13:29 | Install        |    7  <
     8 | root <root>              | 2017-01-02 10:55 | Install        |    2 >
     7 | root <root>              | 2017-01-02 00:11 | Install        |    1
     6 | root <root>              | 2016-12-30 21:57 | Install        |   10
     5 | root <root>              | 2016-12-28 21:33 | Install        |    5  <
     4 | root <root>              | 2016-12-26 19:25 | Install        |    1 >
     3 | root <root>              | 2016-12-26 19:25 | Install        |    3
     2 | root <root>              | 2016-12-26 13:55 | Install        |    1  <
     1 | 系统 <空>                | 2016-07-28 06:26 | Install        | 1239 >
history list
撤销事务
[root@panda log]# yum history undo 12
2.4 网络YUM源
RHEL6.5
[root@xuegod163 ~]# wget http://mirrors.aliyun.com/repo/Centos-6.repo -O /etc/yum.repos.d/CentOS-Base.repo
[root@xuegod163 ~]# sed -i  's/$releasever/6.8/g' /etc/yum.repos.d/CentOS-Base.repo        [root@xuegod163 ~]# yum clean all
[root@xuegod163 ~]# yum list
RHEL7.2
[root@localhost ~]# wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
[root@localhost ~]# sed -i  's/$releasever/7.3.1611/g' /etc/yum.repos.d/CentOS-Base.repo
[root@localhost ~]# yum clean all
[root@localhost ~]# yum list
有一个MYSQL网络源：
http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
通过命令添加YUM源
yum-config-manager --add-repo=http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
rpm –import /etc/pki/rpm-gpg/REDHAT-GPG-*
注：配置网络yum时，为了避免之前的yum文件相互冲突，建议删除之间的配置文件
可直接执行rm -rf /etc/yum.repos.d/* 在执行相应配置
2.5 YUM命令摘要
我们可以根据名称或软件包组，查找、安装、更新和删除软件包
任务
命令
按名称列出已安装和可用的软件包
yum list name
列出已经安装和可用的组
yum grouplist
按关键字搜索软件包
yum search keyword
显示软件包的详细信息
yum info name
安装软件包
yum install –y name
安装软件包组
yum groupinstall ‘name’
更新所有软件包
yum update
删除软件包
yum remove name
显示历史记录
yum history
恢复某个事务的操作
yum history undo 事务ID号
查看某表事务的信息
yum history info事务ID号
3.2 实战：安装nginx服务器
准备工作
       1. 编译环境如gcc编译器、make，可以安装软件包组 开发工具
       2. 准备软件
              nginx-1.8.1.tar.gz

部署Nginx
       pcre: 支持正则表达式，地址重写rewrite
       # yum -y install gcc make zlib-devel pcre pcre-devel openssl-devel

开始安装
编译,配置安装环境./configure----make-----make install
开始安装
# useradd www
# tar xvf nginx-1.8.1.tar.gz
# cd nginx-1.8.1
# ./configure \
> --user=www \
> --group=www \
> --prefix=/usr/local/nginx \
> --with-http_stub_status_module \
> --with-http_sub_module \
> --with-http_ssl_module \
> --with-pcre
# make
# make install
# /usr/local/nginx/sbin/nginx //启动nginx服务器

3. 详解源码安装三步曲
# ./configure
a. 指定安装路径，例如 --prefix=/usr/local/nginx
b. 启用或禁用某项功能, 例如 --enable-ssl, --disable-filter --with-http_ssl_module
c. 和其它软件关联，例如--with-pcre
d. 检查安装环境，例如是否有编译器gcc，是否满足软件的依赖需求
最终生成：Makefile
# make clean //清理掉以前编译后产生的 *.o目标文件
# make //按Makefile文件编译，可以使用-j 2指定两颗CPU编译，优化编译器参数
# make install //按Makefile定义的文件路径安装

