基于安装好的mysql5.7去配置主从同步

1、配置文件配置基础：

编辑配置文件配置参数：
[root@app mysql3306]# vim /data/mysql/mysql3306/my3306.cnf

配置文件中加入以下参数
服务器id（主从必须不一样）
server-id = 1003306
#打开日志
log-bin = /data/mysql/mysql3306/logs/mysql-bin

#允许同步的数据库
binlog-do-db=alinx
##不允许同步的库(多个写多行
binlog-ignore-db=mysql
binlog-ignore-db=information_schema
binlog-ignore-db=performance_schema
binlog-ignore-db=sys


配置好后重启数据库后查看数据库是否已经开始日志功能
启动：  /usr/local/mysql/bin/mysqld    --defaults-file=/data/mysql/mysql3306/my3306.cnf    &
关闭：  /usr/local/mysql/bin/mysqladmin    -S   /tmp/mysql3306.sock    shutdown
进入：  /usr/local/mysql/bin/mysql    -S    /tmp/mysql3306.sock   -p


验证是否开二进制日志：
mysql> show variables like '%log_bin%';
+---------------------------------+--------------------------------------------+
| Variable_name                   | Value                                      |
+---------------------------------+--------------------------------------------+
| log_bin                         | ON                                         |
| log_bin_basename                | /data/mysql/mysql3306/logs/mysql-bin       |
| log_bin_index                   | /data/mysql/mysql3306/logs/mysql-bin.index |
| log_bin_trust_function_creators | ON                                         |
| log_bin_use_v1_row_events       | OFF                                        |
| sql_log_bin                     | ON                                         |
+---------------------------------+--------------------------------------------+
6 rows in set (0.01 sec)

2、master的数据库配置（主数据库）：
              创建同步账号并赋予密码
mysql>grant replication slave on *.* to 'backup'@'%' identified by '123456';
mysql>use mysql
mysql>select user,authentication_string,host from user;




mysql> show master status\G
*************************** 1. row ***************************
             File: mysql-bin.000002
         Position: 316
     Binlog_Do_DB:
Binlog_Ignore_DB: sys
Executed_Gtid_Set: fdb1c333-9ec7-11e8-8396-00163e12c652:1
1 row in set (0.00 sec)




重启MySQL服务并设置读取锁定，读取锁定的意思是只能读取，不能更新，以便获得一个一致性的快照

将master同步的数据库导出并且同步到从slave数据库中然后配置slave数据库
             关闭只读属性:  set global read_only = 0;
             开启只读属性:  set global read_only = 1;

3、slave的数据库配置（从数据库）：

[root@app mysql3306]# /usr/local/mysql/bin/mysqldump -S  /tmp/mysql3306.sock -uroot -p -B alinx >alinx.sql
-B  带建库语句
server-id = 1003307
#加上以下参数可以避免更新不及时，SLAVE 重启后导致的主从复制出错
vim my3306.cnf
read_only = 1
master_info_repositiry=TABLE
relay_log_info_repository=TABLE
relay_log_recovery=1 #从库禁止写
super_read_only=1 #从库禁止写


登录slave从数据库，并做如下设置：
mysql> stop slave;
Query OK, 0 rows affected, 1 warning (0.00 sec)

mysql> change master to
    -> master_host='47.98.188.24',
    -> master_user='backup',
    -> master_password='123456',
    -> master_log_file='mysql-bin.000002',
    -> master_log_pos=316;
Query OK, 0 rows affected, 2 warnings (0.05 sec)



mysql> show   slave   status\G;
*************************** 1. row ***************************
               Slave_IO_State: Waiting for master to send event
                  Master_Host: 47.98.188.24
                  Master_User: backup
                  Master_Port: 3306
                Connect_Retry: 60
              Master_Log_File: mysql-bin.000002
          Read_Master_Log_Pos: 975
               Relay_Log_File: relay-bin.000003
                Relay_Log_Pos: 979
        Relay_Master_Log_File: mysql-bin.000002
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
              Replicate_Do_DB:
          Replicate_Ignore_DB:
           Replicate_Do_Table:
       Replicate_Ignore_Table:
      Replicate_Wild_Do_Table:
  Replicate_Wild_Ignore_Table:
                   Last_Errno: 0
                   Last_Error:
                 Skip_Counter: 0
          Exec_Master_Log_Pos: 975
              Relay_Log_Space: 1180
              Until_Condition: None
            ...

4、如果对接有问题先看看对接状态，然后重新设置

reset  slave   all;

对接有问题：

总结，配置文件和日志文件都排查一下，然后就是网络通信的问题，总有一个问题是原因


5、创建表数据并测试与确认是否已经同步

在master库的表中创建一个表，测试同步状态
create   table   cc(id int);

在slave库中查看是否存在此表；
mysql> show   tables;


一主多从也是这么配置